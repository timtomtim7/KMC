package blue.sparse.kmc.api.type.block

import blue.sparse.kmc.api.data.Property
import blue.sparse.kmc.api.type.variations.*

@Suppress("unused")
object Blocks {
	object ActivatorRail: BlockType.AbstractSimple("activator_rail")
	object AttachedMelonStem: BlockType.AbstractSimple("attached_melon_stem")
	object AttachedPumpkinStem: BlockType.AbstractSimple("attached_pumpkin_stem")
	object Barrier: BlockType.AbstractSimple("barrier")
	object Beacon: BlockType.AbstractSimple("beacon")
	object Bedrock: BlockType.AbstractSimple("bedrock")
	object Beetroots: BlockType.AbstractSimple("beetroots")
	object BoneBlock: BlockType.AbstractSimple("bone_block")
	object Bookshelf: BlockType.AbstractSimple("bookshelf")
	object BrewingStand: BlockType.AbstractSimple("brewing_stand")
	object Bricks: BlockType.AbstractSimple("bricks")
	object BubbleColumn: BlockType.AbstractSimple("bubble_column")
	object Cactus: BlockType.AbstractSimple("cactus")
	object Cake: BlockType.AbstractSimple("cake")
	object Carrots: BlockType.AbstractSimple("carrots")
	object CarvedPumpkin: BlockType.AbstractSimple("carved_pumpkin")
	object Cauldron: BlockType.AbstractSimple("cauldron")
	object Chest: BlockType.AbstractSimple("chest")
	object ChiseledQuartzBlock: BlockType.AbstractSimple("chiseled_quartz_block")
	object ChiseledRedSandstone: BlockType.AbstractSimple("chiseled_red_sandstone")
	object ChiseledSandstone: BlockType.AbstractSimple("chiseled_sandstone")
	object ChiseledStoneBricks: BlockType.AbstractSimple("chiseled_stone_bricks")
	object ChorusFlower: BlockType.AbstractSimple("chorus_flower")
	object ChorusPlant: BlockType.AbstractSimple("chorus_plant")
	object Clay: BlockType.AbstractSimple("clay")
	object CoalBlock: BlockType.AbstractSimple("coal_block")
	object CoarseDirt: BlockType.AbstractSimple("coarse_dirt")
	object Cobblestone: BlockType.AbstractSimple("cobblestone")
	object CobblestoneWall: BlockType.AbstractSimple("cobblestone_wall")
	object Cobweb: BlockType.AbstractSimple("cobweb")
	object Cocoa: BlockType.AbstractSimple("cocoa")
	object Comparator: BlockType.AbstractSimple("comparator")
	object Conduit: BlockType.AbstractSimple("conduit")
	object CrackedStoneBricks: BlockType.AbstractSimple("cracked_stone_bricks")
	object CraftingTable: BlockType.AbstractSimple("crafting_table")
	object CutRedSandstone: BlockType.AbstractSimple("cut_red_sandstone")
	object CutSandstone: BlockType.AbstractSimple("cut_sandstone")
	object DarkPrismarine: BlockType.AbstractSimple("dark_prismarine")
	object DaylightDetector: BlockType.AbstractSimple("daylight_detector")
	object DetectorRail: BlockType.AbstractSimple("detector_rail")
	object DiamondBlock: BlockType.AbstractSimple("diamond_block")
	object Dirt: BlockType.AbstractSimple("dirt")
	object Dispenser: BlockType.AbstractSimple("dispenser")
	object DragonEgg: BlockType.AbstractSimple("dragon_egg")
	object DriedKelpBlock: BlockType.AbstractSimple("dried_kelp_block")
	object Dropper: BlockType.AbstractSimple("dropper")
	object EmeraldBlock: BlockType.AbstractSimple("emerald_block")
	object EnchantingTable: BlockType.AbstractSimple("enchanting_table")
	object EnderChest: BlockType.AbstractSimple("ender_chest")
	object EndGateway: BlockType.AbstractSimple("end_gateway")
	object EndPortal: BlockType.AbstractSimple("end_portal")
	object EndPortalFrame: BlockType.AbstractSimple("end_portal_frame")
	object EndRod: BlockType.AbstractSimple("end_rod")
	object EndStone: BlockType.AbstractSimple("end_stone")
	object EndStoneBricks: BlockType.AbstractSimple("end_stone_bricks")
	object Farmland: BlockType.AbstractSimple("farmland")
	object Fire: BlockType.AbstractSimple("fire")
	object Furnace: BlockType.AbstractSimple("furnace")
	object Glass: BlockType.AbstractSimple("glass")
	object GlassPane: BlockType.AbstractSimple("glass_pane")
	object Glowstone: BlockType.AbstractSimple("glowstone")
	object GoldBlock: BlockType.AbstractSimple("gold_block")
	object GrassBlock: BlockType.AbstractSimple("grass_block")
	object GrassPath: BlockType.AbstractSimple("grass_path")
	object Gravel: BlockType.AbstractSimple("gravel")
	object HayBlock: BlockType.AbstractSimple("hay_block")
	object Hopper: BlockType.AbstractSimple("hopper")
	object InfestedChiseledStoneBricks: BlockType.AbstractSimple("infested_chiseled_stone_bricks")
	object InfestedCobblestone: BlockType.AbstractSimple("infested_cobblestone")
	object InfestedCrackedStoneBricks: BlockType.AbstractSimple("infested_cracked_stone_bricks")
	object InfestedMossyStoneBricks: BlockType.AbstractSimple("infested_mossy_stone_bricks")
	object InfestedStone: BlockType.AbstractSimple("infested_stone")
	object InfestedStoneBricks: BlockType.AbstractSimple("infested_stone_bricks")
	object IronBars: BlockType.AbstractSimple("iron_bars")
	object IronBlock: BlockType.AbstractSimple("iron_block")
	object JackOLantern: BlockType.AbstractSimple("jack_o_lantern")
	object Jukebox: BlockType.AbstractSimple("jukebox")
	object Ladder: BlockType.AbstractSimple("ladder")
	object LapisBlock: BlockType.AbstractSimple("lapis_block")
	object Lava: BlockType.AbstractSimple("lava")
	object Lever: BlockType.AbstractSimple("lever")
	object LilyPad: BlockType.AbstractSimple("lily_pad")
	object MagmaBlock: BlockType.AbstractSimple("magma_block")
	object Melon: BlockType.AbstractSimple("melon")
	object MelonStem: BlockType.AbstractSimple("melon_stem")
	object MossyCobblestone: BlockType.AbstractSimple("mossy_cobblestone")
	object MossyCobblestoneWall: BlockType.AbstractSimple("mossy_cobblestone_wall")
	object MossyStoneBricks: BlockType.AbstractSimple("mossy_stone_bricks")
	object MovingPiston: BlockType.AbstractSimple("moving_piston")
	object MushroomStem: BlockType.AbstractSimple("mushroom_stem")
	object Mycelium: BlockType.AbstractSimple("mycelium")
	object Netherrack: BlockType.AbstractSimple("netherrack")
	object NetherBricks: BlockType.AbstractSimple("nether_bricks")
	object NetherPortal: BlockType.AbstractSimple("nether_portal")
	object NetherWart: BlockType.AbstractSimple("nether_wart")
	object NetherWartBlock: BlockType.AbstractSimple("nether_wart_block")
	object NoteBlock: BlockType.AbstractSimple("note_block")
	object Observer: BlockType.AbstractSimple("observer")
	object Obsidian: BlockType.AbstractSimple("obsidian")
	object Piston: BlockType.AbstractSimple("piston")
	object Podzol: BlockType.AbstractSimple("podzol")
	object Potatoes: BlockType.AbstractSimple("potatoes")
	object PoweredRail: BlockType.AbstractSimple("powered_rail")
	object Prismarine: BlockType.AbstractSimple("prismarine")
	object PrismarineBricks: BlockType.AbstractSimple("prismarine_bricks")
	object Pumpkin: BlockType.AbstractSimple("pumpkin")
	object PumpkinStem: BlockType.AbstractSimple("pumpkin_stem")
	object PurpurBlock: BlockType.AbstractSimple("purpur_block")
	object PurpurPillar: BlockType.AbstractSimple("purpur_pillar")
	object QuartzBlock: BlockType.AbstractSimple("quartz_block")
	object QuartzPillar: BlockType.AbstractSimple("quartz_pillar")
	object Rail: BlockType.AbstractSimple("rail")
	object Repeater: BlockType.AbstractSimple("repeater")
	object Sand: BlockType.AbstractSimple("sand")
	object Sandstone: BlockType.AbstractSimple("sandstone")
	object SeaLantern: BlockType.AbstractSimple("sea_lantern")
	object SeaPickle: BlockType.AbstractSimple("sea_pickle")
	object Sign: BlockType.AbstractSimple("sign")
	object SlimeBlock: BlockType.AbstractSimple("slime_block")
	object SmoothQuartz: BlockType.AbstractSimple("smooth_quartz")
	object SmoothRedSandstone: BlockType.AbstractSimple("smooth_red_sandstone")
	object SmoothSandstone: BlockType.AbstractSimple("smooth_sandstone")
	object SmoothStone: BlockType.AbstractSimple("smooth_stone")
	object Snow: BlockType.AbstractSimple("snow")
	object SnowBlock: BlockType.AbstractSimple("snow_block")
	object SoulSand: BlockType.AbstractSimple("soul_sand")
	object Spawner: BlockType.AbstractSimple("spawner")
	object StickyPiston: BlockType.AbstractSimple("sticky_piston")
	object StoneBricks: BlockType.AbstractSimple("stone_bricks")
	object StructureBlock: BlockType.AbstractSimple("structure_block")
	object StructureVoid: BlockType.AbstractSimple("structure_void")
	object SugarCane: BlockType.AbstractSimple("sugar_cane")
//	object Terracotta: BlockType.AbstractSimple("terracotta")
	object Tnt: BlockType.AbstractSimple("tnt")
	object Torch: BlockType.AbstractSimple("torch")
	object TrappedChest: BlockType.AbstractSimple("trapped_chest")
	object Tripwire: BlockType.AbstractSimple("tripwire")
	object TripwireHook: BlockType.AbstractSimple("tripwire_hook")
	object TurtleEgg: BlockType.AbstractSimple("turtle_egg")
	object Vine: BlockType.AbstractSimple("vine")
	object WallSign: BlockType.AbstractSimple("wall_sign")
	object WallTorch: BlockType.AbstractSimple("wall_torch")
	object Water: BlockType.AbstractSimple("water")

	object Stone: BlockType.Abstract<StoneVariation>("stone")
	object PolishedStone: BlockType.Abstract<PolishedStoneVariation>("polished_stone")

	object Wheat: BlockType.AbstractSimple("wheat")
	object Allium: BlockType.AbstractSimple("allium")
	object AzureBluet: BlockType.AbstractSimple("azure_bluet")
	object Dandelion: BlockType.AbstractSimple("dandelion")
	object DeadBush: BlockType.AbstractSimple("dead_bush")
	object Fern: BlockType.AbstractSimple("fern")
	object Grass: BlockType.AbstractSimple("grass")
	object Kelp: BlockType.AbstractSimple("kelp")
	object KelpPlant: BlockType.AbstractSimple("kelp_plant")
	object LargeFern: BlockType.AbstractSimple("large_fern")
	object Lilac: BlockType.AbstractSimple("lilac")
	object OxeyeDaisy: BlockType.AbstractSimple("oxeye_daisy")
	object Peony: BlockType.AbstractSimple("peony")
	object Poppy: BlockType.AbstractSimple("poppy")
	object RoseBush: BlockType.AbstractSimple("rose_bush")
	object Seagrass: BlockType.AbstractSimple("seagrass")
	object Sunflower: BlockType.AbstractSimple("sunflower")
	object TallGrass: BlockType.AbstractSimple("tall_grass")
	object TallSeagrass: BlockType.AbstractSimple("tall_seagrass")
	object BlueOrchid: BlockType.AbstractSimple("blue_orchid")
	object OrangeTulip: BlockType.AbstractSimple("orange_tulip")
	object PinkTulip: BlockType.AbstractSimple("pink_tulip")
	object BrownMushroom: BlockType.AbstractSimple("brown_mushroom")
	object RedMushroom: BlockType.AbstractSimple("red_mushroom")
	object RedTulip: BlockType.AbstractSimple("red_tulip")
	object WhiteTulip: BlockType.AbstractSimple("white_tulip")

	object Air: BlockType.Abstract<AirVariation>("air")
	object Sponge: BlockType.Abstract<SpongeVariation>("sponge")
	object Slab: BlockType.Abstract<SlabVariation>("slab")
	object Stairs: BlockType.Abstract<StairVariation>("stairs")
	object Ice: BlockType.Abstract<IceVariation>("ice")
	object Anvil: BlockType.Abstract<AnvilVariation>("anvil")
	object Ore: BlockType.Abstract<OreVariation>("ore")

	object SkeletonSkull: BlockType.AbstractSimple("skeleton_skull")
	object SkeletonWallSkull: BlockType.AbstractSimple("skeleton_wall_skull")
	object WitherSkeletonSkull: BlockType.AbstractSimple("wither_skeleton_skull")
	object WitherSkeletonWallSkull: BlockType.AbstractSimple("wither_skeleton_wall_skull")
	object CreeperHead: BlockType.AbstractSimple("creeper_head")
	object CreeperWallHead: BlockType.AbstractSimple("creeper_wall_head")
	object DragonHead: BlockType.AbstractSimple("dragon_head")
	object DragonWallHead: BlockType.AbstractSimple("dragon_wall_head")
	object PistonHead: BlockType.AbstractSimple("piston_head")
	object PlayerHead: BlockType.AbstractSimple("player_head")
	object PlayerWallHead: BlockType.AbstractSimple("player_wall_head")
	object ZombieHead: BlockType.AbstractSimple("zombie_head")
	object ZombieWallHead: BlockType.AbstractSimple("zombie_wall_head")

	object ChainCommandBlock: BlockType.AbstractSimple("chain_command_block")
	object CommandBlock: BlockType.AbstractSimple("command_block")
	object RepeatingCommandBlock: BlockType.AbstractSimple("repeating_command_block")

	abstract class CoralType(id: String): BlockType.Abstract<CoralVariation>(id) {
		override val properties: Property.Set
			get() {
				val default = BlockType.defaultProperties
				default.add(BlockProperties.CoralDead)
				return default
			}
	}

	object Coral: CoralType("coral")
	object CoralBlock: CoralType("coral_block")
	object CoralFan: CoralType("coral_fan")
	object CoralWallFan: CoralType("coral_wall_fan")

	object FlowerPot: BlockType.Abstract<FlowerPotVariation>("flower_pot")
	object Button: BlockType.Abstract<ButtonVariation>("button")
	object Door: BlockType.Abstract<DoorVariation>("door")
	object Fence: BlockType.Abstract<FenceVariation>("fence")
	object FenceGate: BlockType.Abstract<FenceGateVariation>("fence_gate")
	object Leaves: BlockType.Abstract<LeavesVariation>("leaves")
	object Log: BlockType.Abstract<LogVariation>("log")
	object Planks: BlockType.Abstract<PlanksVariation>("planks")
	object PressurePlate: BlockType.Abstract<PressurePlateVariation>("heavy_weighted_pressure_plate")
	object Sapling: BlockType.Abstract<SaplingVariation>("sapling")
	object Trapdoor: BlockType.Abstract<TrapdoorVariation>("trapdoor")
	object AcaciaWood: BlockType.Abstract<WoodVariation>("acacia_wood")
	object StrippedLog: BlockType.Abstract<StrippedLogVariation>("stripped_log")
	object StrippedWood: BlockType.Abstract<StrippedWoodVariation>("stripped_wood")

	object Banner: BlockType.Abstract<DyeVariation>("banner")
//	object WallBanner: BlockType.Abstract<DyeVariation("wall_banner")
	object Bed: BlockType.Abstract<DyeVariation>("bed")
	object Carpet: BlockType.Abstract<DyeVariation>("carpet")
	object Concrete: BlockType.Abstract<DyeVariation>("concrete")
	object ConcretePowder: BlockType.Abstract<DyeVariation>("concrete_powder")
	object GlazedTerracotta: BlockType.Abstract<DyeVariation>("glazed_terracotta")
	object ShulkerBox: BlockType.Abstract<DyeVariation>("shulker_box") // Normal Variation required
	object StainedGlass: BlockType.Abstract<DyeVariation>("stained_glass")
	object StainedGlassPane: BlockType.Abstract<DyeVariation>("stained_glass_pane")
	object Terracotta: BlockType.Abstract<DyeVariation>("terracotta") // Normal Variation required
	object Wool: BlockType.Abstract<DyeVariation>("wool")


	object BrownMushroomBlock: BlockType.AbstractSimple("brown_mushroom_block")
	object RedstoneBlock: BlockType.AbstractSimple("redstone_block")
	object RedstoneLamp: BlockType.AbstractSimple("redstone_lamp")
	object RedstoneTorch: BlockType.AbstractSimple("redstone_torch")
	object RedstoneWallTorch: BlockType.AbstractSimple("redstone_wall_torch")
	object RedstoneWire: BlockType.AbstractSimple("redstone_wire")
	object RedMushroomBlock: BlockType.AbstractSimple("red_mushroom_block")
	object RedNetherBricks: BlockType.AbstractSimple("red_nether_bricks")
	object RedSand: BlockType.AbstractSimple("red_sand")
	object RedSandstone: BlockType.AbstractSimple("red_sandstone")

	//object (white|orange|magenta|light|yellow|lime|pink|gray|cyan|purple|blue|brown|green|red|black)

}