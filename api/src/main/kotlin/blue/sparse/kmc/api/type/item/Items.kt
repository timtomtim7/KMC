package blue.sparse.kmc.api.type.item

import blue.sparse.kmc.api.data.Property
import blue.sparse.kmc.api.type.variations.*

@Suppress("unused")
object Items {

	object Apple : ItemType.AbstractSimple("apple")
	object ArmorStand : ItemType.AbstractSimple("armor_stand")
	object Arrow : ItemType.AbstractSimple("arrow")
	object BakedPotato : ItemType.AbstractSimple("baked_potato")
	object Beef : ItemType.AbstractSimple("beef")
	object Beetroot : ItemType.AbstractSimple("beetroot")
	object BeetrootSeeds : ItemType.AbstractSimple("beetroot_seeds")
	object BeetrootSoup : ItemType.AbstractSimple("beetroot_soup")
	object BlazePowder : ItemType.AbstractSimple("blaze_powder")
	object BlazeRod : ItemType.AbstractSimple("blaze_rod")
	object Bone : ItemType.AbstractSimple("bone")
	object Book : ItemType.AbstractSimple("book")
	object Bow : ItemType.AbstractSimple("bow")
	object Bowl : ItemType.AbstractSimple("bowl")
	object Bread : ItemType.AbstractSimple("bread")
	object Brick : ItemType.AbstractSimple("brick")
	object Bucket : ItemType.AbstractSimple("bucket")
	object Carrot : ItemType.AbstractSimple("carrot")
	object CarrotOnAStick : ItemType.AbstractSimple("carrot_on_a_stick")
	object Charcoal : ItemType.AbstractSimple("charcoal")
	object ChestMinecart : ItemType.AbstractSimple("chest_minecart")
	object Chicken : ItemType.AbstractSimple("chicken")
	object ChorusFruit : ItemType.AbstractSimple("chorus_fruit")
	object ClayBall : ItemType.AbstractSimple("clay_ball")
	object Clock : ItemType.AbstractSimple("clock")
	object Coal : ItemType.AbstractSimple("coal")
	object Cod : ItemType.AbstractSimple("cod")
	object CodBucket : ItemType.AbstractSimple("cod_bucket")
	object CommandBlockMinecart : ItemType.AbstractSimple("command_block_minecart")
	object Compass : ItemType.AbstractSimple("compass")
	object CookedBeef : ItemType.AbstractSimple("cooked_beef")
	object CookedChicken : ItemType.AbstractSimple("cooked_chicken")
	object CookedCod : ItemType.AbstractSimple("cooked_cod")
	object CookedMutton : ItemType.AbstractSimple("cooked_mutton")
	object CookedPorkchop : ItemType.AbstractSimple("cooked_porkchop")
	object CookedRabbit : ItemType.AbstractSimple("cooked_rabbit")
	object CookedSalmon : ItemType.AbstractSimple("cooked_salmon")
	object Cookie : ItemType.AbstractSimple("cookie")
	object DebugStick : ItemType.AbstractSimple("debug_stick")
	object Diamond : ItemType.AbstractSimple("diamond")
	object DiamondHorseArmor : ItemType.AbstractSimple("diamond_horse_armor")
	object DragonBreath : ItemType.AbstractSimple("dragon_breath")
	object DriedKelp : ItemType.AbstractSimple("dried_kelp")
	object Egg : ItemType.AbstractSimple("egg")
	object Elytra : ItemType.AbstractSimple("elytra")
	object Emerald : ItemType.AbstractSimple("emerald")
	object EnchantedBook : ItemType.AbstractSimple("enchanted_book")
	object EnchantedGoldenApple : ItemType.AbstractSimple("enchanted_golden_apple")
	object EnderEye : ItemType.AbstractSimple("ender_eye")
	object EnderPearl : ItemType.AbstractSimple("ender_pearl")
	object EndCrystal : ItemType.AbstractSimple("end_crystal")
	object ExperienceBottle : ItemType.AbstractSimple("experience_bottle")
	object Feather : ItemType.AbstractSimple("feather")
	object FermentedSpiderEye : ItemType.AbstractSimple("fermented_spider_eye")
	object FilledMap : ItemType.AbstractSimple("filled_map")
	object FireworkRocket : ItemType.AbstractSimple("firework_rocket")
	object FireworkStar : ItemType.AbstractSimple("firework_star")
	object FireCharge : ItemType.AbstractSimple("fire_charge")
	object FishingRod : ItemType.AbstractSimple("fishing_rod")
	object Flint : ItemType.AbstractSimple("flint")
	object FlintAndSteel : ItemType.AbstractSimple("flint_and_steel")
	object FurnaceMinecart : ItemType.AbstractSimple("furnace_minecart")
	object GhastTear : ItemType.AbstractSimple("ghast_tear")
	object GlassBottle : ItemType.AbstractSimple("glass_bottle")
	object GlisteringMelonSlice : ItemType.AbstractSimple("glistering_melon_slice")
	object GlowstoneDust : ItemType.AbstractSimple("glowstone_dust")
	object GoldenApple : ItemType.AbstractSimple("golden_apple")
	object GoldenCarrot : ItemType.AbstractSimple("golden_carrot")
	object GoldenHorseArmor : ItemType.AbstractSimple("golden_horse_armor")
	object GoldIngot : ItemType.AbstractSimple("gold_ingot")
	object GoldNugget : ItemType.AbstractSimple("gold_nugget")
	object Gunpowder : ItemType.AbstractSimple("gunpowder")
	object HeartOfTheSea : ItemType.AbstractSimple("heart_of_the_sea")
	object HopperMinecart : ItemType.AbstractSimple("hopper_minecart")
	object IronHorseArmor : ItemType.AbstractSimple("iron_horse_armor")
	object IronIngot : ItemType.AbstractSimple("iron_ingot")
	object IronNugget : ItemType.AbstractSimple("iron_nugget")
	object ItemFrame : ItemType.AbstractSimple("item_frame")
	object KnowledgeBook : ItemType.AbstractSimple("knowledge_book")
	object LavaBucket : ItemType.AbstractSimple("lava_bucket")
	object Lead : ItemType.AbstractSimple("lead")
	object Leather : ItemType.AbstractSimple("leather")
	object LingeringPotion : ItemType.AbstractSimple("lingering_potion")
	object MagmaCream : ItemType.AbstractSimple("magma_cream")
	object Map : ItemType.AbstractSimple("map")
	object MelonSeeds : ItemType.AbstractSimple("melon_seeds")
	object MelonSlice : ItemType.AbstractSimple("melon_slice")
	object MilkBucket : ItemType.AbstractSimple("milk_bucket")
	object Minecart : ItemType.AbstractSimple("minecart")
	object MushroomStew : ItemType.AbstractSimple("mushroom_stew")
	object Mutton : ItemType.AbstractSimple("mutton")
	object NameTag : ItemType.AbstractSimple("name_tag")
	object NautilusShell : ItemType.AbstractSimple("nautilus_shell")
	object NetherBrick : ItemType.AbstractSimple("nether_brick")
	object NetherStar : ItemType.AbstractSimple("nether_star")
	object Painting : ItemType.AbstractSimple("painting")
	object Paper : ItemType.AbstractSimple("paper")
	object PhantomMembrane : ItemType.AbstractSimple("phantom_membrane")
	object PoisonousPotato : ItemType.AbstractSimple("poisonous_potato")
	object PoppedChorusFruit : ItemType.AbstractSimple("popped_chorus_fruit")
	object Porkchop : ItemType.AbstractSimple("porkchop")
	object Potato : ItemType.AbstractSimple("potato")
	object Potion : ItemType.AbstractSimple("potion")
	object PrismarineCrystals : ItemType.AbstractSimple("prismarine_crystals")
	object PrismarineShard : ItemType.AbstractSimple("prismarine_shard")
	object Pufferfish : ItemType.AbstractSimple("pufferfish")
	object PufferfishBucket : ItemType.AbstractSimple("pufferfish_bucket")
	object PumpkinPie : ItemType.AbstractSimple("pumpkin_pie")
	object PumpkinSeeds : ItemType.AbstractSimple("pumpkin_seeds")
	object Quartz : ItemType.AbstractSimple("quartz")
	object Rabbit : ItemType.AbstractSimple("rabbit")
	object RabbitFoot : ItemType.AbstractSimple("rabbit_foot")
	object RabbitHide : ItemType.AbstractSimple("rabbit_hide")
	object RabbitStew : ItemType.AbstractSimple("rabbit_stew")
	object Redstone : ItemType.AbstractSimple("redstone")
	object RottenFlesh : ItemType.AbstractSimple("rotten_flesh")
	object Saddle : ItemType.AbstractSimple("saddle")
	object Salmon : ItemType.AbstractSimple("salmon")
	object SalmonBucket : ItemType.AbstractSimple("salmon_bucket")
	object Scute : ItemType.AbstractSimple("scute")
	object Shears : ItemType.AbstractSimple("shears")
	object Shield : ItemType.AbstractSimple("shield")
	object ShulkerShell : ItemType.AbstractSimple("shulker_shell")
	object SlimeBall : ItemType.AbstractSimple("slime_ball")
	object Snowball : ItemType.AbstractSimple("snowball")
	object SpectralArrow : ItemType.AbstractSimple("spectral_arrow")
	object SpiderEye : ItemType.AbstractSimple("spider_eye")
	object SplashPotion : ItemType.AbstractSimple("splash_potion")
	object Stick : ItemType.AbstractSimple("stick")
	object String : ItemType.AbstractSimple("string")
	object Sugar : ItemType.AbstractSimple("sugar")
	object TippedArrow : ItemType.AbstractSimple("tipped_arrow")
	object TntMinecart : ItemType.AbstractSimple("tnt_minecart")
	object TotemOfUndying : ItemType.AbstractSimple("totem_of_undying")
	object Trident : ItemType.AbstractSimple("trident")
	object TropicalFish : ItemType.AbstractSimple("tropical_fish")
	object TropicalFishBucket : ItemType.AbstractSimple("tropical_fish_bucket")
	object TurtleHelmet : ItemType.AbstractSimple("turtle_helmet")
	object WaterBucket : ItemType.AbstractSimple("water_bucket")
	object WheatSeeds : ItemType.AbstractSimple("wheat_seeds")
	object WritableBook : ItemType.AbstractSimple("writable_book")
	object WrittenBook : ItemType.AbstractSimple("written_book")

	object MusicDisc: ItemType.Abstract<MusicDiscVariation>("music_disc")

	object Dye: ItemType.Abstract<DyeVariation>("dye")

	object SpawnEgg: ItemType.Abstract<SpawnEggVariation>("spawn_egg")

	object Boat: ItemType.Abstract<BoatVariation>("boat")

	abstract class Armor(id: kotlin.String) : ItemType.Abstract<ArmorVariation>(id) {
		companion object: List<Armor> by listOf(Helmet, Chestplate, Leggings, Boots)
	}

	object Helmet : Armor("helmet")
	object Chestplate : Armor("chestplate")
	object Leggings : Armor("leggings")
	object Boots : Armor("boots")

	abstract class Tool(id: kotlin.String) : ItemType.Abstract<ToolVariation>(id) {
		override val properties: Property.Set
			get() {
				val default = ItemType.defaultProperties
				default.add(ItemProperties.Durability)
				return default
			}

		companion object: List<Tool> by listOf(Sword, Pickaxe, Shovel, Axe, Hoe)
	}

	object Sword : Tool("sword")
	object Pickaxe : Tool("pickaxe")
	object Shovel : Tool("shovel")
	object Axe : Tool("axe")
	object Hoe : Tool("hoe")

	//Item(Items.Dye, DyeVariation.White)
	//Item(Items.BoneMeal)


}